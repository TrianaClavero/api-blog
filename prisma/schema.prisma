// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now()) @map("created_at")
  posts     Post[]
  comments  Comment[]

  favPosts    UsersFavoritePosts[]
  favComments UsersFavoriteComments[]

  @@map("users")
}

model Post {
  id        Int       @id @default(autoincrement())
  content   String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  imageUrl  String?
  author    User      @relation(fields: [userId], references: [id])
  userId    Int
  comments  Comment[]

  usersFav UsersFavoritePosts[]

  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  authorId  Int
  postId    Int
  Post      Post     @relation(fields: [postId], references: [id])
  User      User     @relation(fields: [authorId], references: [id])

  usersFavs UsersFavoriteComments[]

  @@map("comments")
}

model UsersFavoritePosts {
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")

  @@unique([postId, userId])
  @@map("users_favorite_posts")
}

model UsersFavoriteComments {
  id        Int      @id @default(autoincrement())
  userId    Int
  commentId Int
  createdAt DateTime @default(now()) @map("created_at")

  user    User    @relation(fields: [userId], references: [id])
  comment Comment @relation(fields: [commentId], references: [id])

  @@unique([userId, commentId])
  @@map("users_favorite_comments")
}
